<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据加密、脱敏、数据权限处理</title>
      <link href="/2023/04/09/Java/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86%E3%80%81%E8%84%B1%E6%95%8F%E3%80%81%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90%E5%A4%84%E7%90%86/"/>
      <url>/2023/04/09/Java/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86%E3%80%81%E8%84%B1%E6%95%8F%E3%80%81%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ul><li>针对敏感数据，需要进行脱敏加密处理。于是做个记录。</li></ul><h4 id="数据加密"><a href="#数据加密" class="headerlink" title="数据加密"></a>数据加密</h4><ul><li>对数据库的敏感数据，如身份证/手机号，在dao层对数据进行加密处理</li></ul><ol><li>新增国密算法枚举类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><br><br><span class="hljs-meta">@Target(&#123;ElementType.FIELD, ElementType.PARAMETER&#125;)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> FieldSm4Encrypt &#123;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加密密钥</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">encKey</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>添加接口，处理字段加解密</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationTargetException;<br><span class="hljs-keyword">import</span> java.lang.reflect.Parameter;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">ISm4Service</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加密接口</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> fields       字段集合</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> paramsObject object</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;          实体对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IllegalAccessException 反射异常</span><br><span class="hljs-comment">     */</span><br>    &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Field[] fields, T paramsObject)</span> <span class="hljs-keyword">throws</span> IllegalAccessException;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加密接口，对入参进行加密</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> parameters   方法参数数组</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> parameterMap 参数k/v 映射</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Parameter[] parameters,</span><br><span class="hljs-params">                 Map&lt;Object, Object&gt; parameterMap)</span>;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 数据加密</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> parameter 参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> t         需要加密的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;       数据类型</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 加密后的数据</span><br><span class="hljs-comment">     */</span><br>    &lt;T&gt; T <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Parameter parameter, T t)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 解密</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> result resultType的实例</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IllegalAccessException 反射异常</span><br><span class="hljs-comment">     */</span><br>    &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">decrypt</span><span class="hljs-params">(T result)</span> <span class="hljs-keyword">throws</span> IllegalAccessException;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> cn.hutool.crypto.CryptoException;<br><span class="hljs-keyword">import</span> cn.hutool.crypto.SmUtil;<br><span class="hljs-keyword">import</span> cn.hutool.crypto.symmetric.SM4;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.annotations.FieldSm4Encrypt;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.service.ISm4Service;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Param;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.springframework.util.StringUtils;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationTargetException;<br><span class="hljs-keyword">import</span> java.lang.reflect.Parameter;<br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Sm4ServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ISm4Service</span> &#123;<br><br>  <span class="hljs-comment">// 这里可以固定一个默认key，或者通过@Value注入，</span><br>  <span class="hljs-comment">// 他只有在注解的encKey字段为空时，才会使用默认</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_KEY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Field[] fields, T paramsObject)</span> <span class="hljs-keyword">throws</span> IllegalAccessException &#123;<br>        <span class="hljs-keyword">for</span> (Field field : fields) &#123;<br>            <span class="hljs-comment">//取出所有被FieldSm4Encrypt注解的字段</span><br>            <span class="hljs-type">FieldSm4Encrypt</span> <span class="hljs-variable">encryptTransaction</span> <span class="hljs-operator">=</span> field.getAnnotation(FieldSm4Encrypt.class);<br>            <span class="hljs-keyword">if</span> (!Objects.isNull(encryptTransaction)) &#123;<br>                field.setAccessible(<span class="hljs-literal">true</span>);<br>                <span class="hljs-type">Object</span> <span class="hljs-variable">object</span> <span class="hljs-operator">=</span> field.get(paramsObject);<br>                <span class="hljs-comment">//暂时只实现String类型的加密</span><br>                <span class="hljs-keyword">if</span> (object <span class="hljs-keyword">instanceof</span> String) &#123;<br>                    <span class="hljs-keyword">if</span> (!StringUtils.hasText((String) object)) &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br>                    <span class="hljs-comment">//加密</span><br>                    field.set(paramsObject,<br>                            <span class="hljs-built_in">this</span>.getSm4(encryptTransaction.encKey()).encryptHex((String) object));<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Parameter[] parameters,</span><br><span class="hljs-params">                        Map&lt;Object, Object&gt; parameterMap)</span> &#123;<br>        <span class="hljs-keyword">for</span> (Parameter parameter : parameters) &#123;<br>            <span class="hljs-type">FieldSm4Encrypt</span> <span class="hljs-variable">fieldSm4Encrypt</span> <span class="hljs-operator">=</span> parameter.getDeclaredAnnotation(FieldSm4Encrypt.class);<br>            <span class="hljs-keyword">if</span> (Objects.isNull(fieldSm4Encrypt)) &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> parameter.getDeclaredAnnotation(Param.class).value();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">encValue</span> <span class="hljs-operator">=</span> getSm4(fieldSm4Encrypt.encKey()).encryptHex(String.valueOf(parameterMap.get(key)));<br>            parameterMap.put(key, encValue);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">encrypt</span><span class="hljs-params">(Parameter parameter, T t)</span> &#123;<br>        <span class="hljs-type">FieldSm4Encrypt</span> <span class="hljs-variable">fieldSm4Encrypt</span> <span class="hljs-operator">=</span> parameter.getDeclaredAnnotation(FieldSm4Encrypt.class);<br>        <span class="hljs-keyword">if</span> (Objects.isNull(fieldSm4Encrypt)) &#123;<br>            <span class="hljs-keyword">return</span> t;<br>        &#125;<br>        <span class="hljs-keyword">return</span> (T) getSm4(fieldSm4Encrypt.encKey())<br>                .encryptHex(String.valueOf(t));<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">decrypt</span><span class="hljs-params">(T result)</span> <span class="hljs-keyword">throws</span> IllegalAccessException &#123;<br>        <span class="hljs-keyword">if</span> (Objects.isNull(result)) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        Class&lt;?&gt; resultClass = result.getClass();<br>        Field[] declaredFields = resultClass.getDeclaredFields();<br>        <span class="hljs-keyword">for</span> (Field field : declaredFields) &#123;<br>            <span class="hljs-type">FieldSm4Encrypt</span> <span class="hljs-variable">fieldSm4Encrypt</span> <span class="hljs-operator">=</span> field.getAnnotation(FieldSm4Encrypt.class);<br>            <span class="hljs-keyword">if</span> (!Objects.isNull(fieldSm4Encrypt)) &#123;<br>                field.setAccessible(<span class="hljs-literal">true</span>);<br>                <span class="hljs-type">Object</span> <span class="hljs-variable">object</span> <span class="hljs-operator">=</span> field.get(result);<br>                <span class="hljs-keyword">if</span> (object <span class="hljs-keyword">instanceof</span> String) &#123;<br>                    <span class="hljs-keyword">if</span> (!StringUtils.hasText((String) object)) &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">try</span> &#123;<br>                        field.set(result, <span class="hljs-built_in">this</span>.getSm4(fieldSm4Encrypt.encKey()).decryptStr((String) object));<br>                    &#125; <span class="hljs-keyword">catch</span> (CryptoException ignored) &#123;<br>                    &#125;<br><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-keyword">private</span> SM4 <span class="hljs-title function_">getSm4</span><span class="hljs-params">(String encPassword)</span> &#123;<br>        <span class="hljs-type">byte</span>[] bytes = StringUtils.hasText(encPassword) ? encPassword.getBytes(StandardCharsets.UTF_8)<br>                : DEFAULT_KEY.getBytes(StandardCharsets.UTF_8);<br>        <span class="hljs-keyword">return</span> SmUtil.sm4(bytes);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol><li>配置拦截器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.peace.common.mysql.service.ISm4Service;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.apache.ibatis.cache.CacheKey;<br><span class="hljs-keyword">import</span> org.apache.ibatis.executor.Executor;<br><span class="hljs-keyword">import</span> org.apache.ibatis.mapping.BoundSql;<br><span class="hljs-keyword">import</span> org.apache.ibatis.mapping.MappedStatement;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Interceptor;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Intercepts;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Invocation;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Signature;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.ResultHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.RowBounds;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-meta">@Intercepts(&#123;</span><br><span class="hljs-meta">        @Signature(</span><br><span class="hljs-meta">                type = Executor.class,</span><br><span class="hljs-meta">                method = &quot;query&quot;,</span><br><span class="hljs-meta">                args = &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class, CacheKey.class, BoundSql.class&#125;),</span><br><span class="hljs-meta">        @Signature(type = Executor.class, method = &quot;update&quot;, args = &#123;MappedStatement.class, Object.class&#125;),</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Sm4ParmeterInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Interceptor</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ISm4Service sm4Service;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">intercept</span><span class="hljs-params">(Invocation invocation)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> invocation.getArgs()[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (statement <span class="hljs-keyword">instanceof</span> MappedStatement) &#123;<br>            <span class="hljs-built_in">this</span>.parameterHandler(invocation, (MappedStatement) statement);<br>        &#125;<br>        <span class="hljs-keyword">return</span> invocation.proceed();<br><br>    &#125;<br><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">parameterHandler</span><span class="hljs-params">(Invocation invocation, MappedStatement statement)</span> <span class="hljs-keyword">throws</span> IllegalAccessException &#123;<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">parameter</span> <span class="hljs-operator">=</span> invocation.getArgs()[<span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">if</span> (Objects.isNull(parameter)) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-type">Method</span> <span class="hljs-variable">method</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getDaoTargetMethod(statement);<br>        <span class="hljs-keyword">if</span> (Objects.isNull(method)) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (parameter <span class="hljs-keyword">instanceof</span> String) &#123;<br>            invocation.getArgs()[<span class="hljs-number">1</span>] = sm4Service.encrypt(method.getParameters()[<span class="hljs-number">0</span>], parameter);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (parameter <span class="hljs-keyword">instanceof</span> Map) &#123;<br>            sm4Service.encrypt(method.getParameters(), (Map&lt;Object, Object&gt;) parameter);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            sm4Service.encrypt(parameter.getClass().getDeclaredFields(), parameter);<br>        &#125;<br><br><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取dao层方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> mappedStatement statement</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 方法</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Method <span class="hljs-title function_">getDaoTargetMethod</span><span class="hljs-params">(MappedStatement mappedStatement)</span> &#123;<br>        <span class="hljs-type">Method</span> <span class="hljs-variable">method</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">namespace</span> <span class="hljs-operator">=</span> mappedStatement.getId();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> namespace.substring(<span class="hljs-number">0</span>, namespace.lastIndexOf(StringPool.DOT));<br>            <span class="hljs-type">String</span> <span class="hljs-variable">methodName</span> <span class="hljs-operator">=</span> namespace.substring(namespace.lastIndexOf(StringPool.DOT) + <span class="hljs-number">1</span>);<br>            Method[] ms = Class.forName(className).getMethods();<br>            <span class="hljs-keyword">for</span> (Method m : ms) &#123;<br>                <span class="hljs-keyword">if</span> (m.getName().equals(methodName)) &#123;<br>                    method = m;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (SecurityException | ClassNotFoundException e) &#123;<br>            log.warn(<span class="hljs-string">&quot;拦截器解析dao层方法失败:&#123;&#125; &quot;</span>, e.getMessage());<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>        &#125;<br>        <span class="hljs-keyword">return</span> method;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol><li>添加返回结果的拦截器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.peace.common.mysql.service.ISm4Service;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.apache.ibatis.executor.resultset.ResultSetHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Interceptor;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Intercepts;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Invocation;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Signature;<br><span class="hljs-keyword">import</span> org.springframework.util.CollectionUtils;<br><br><span class="hljs-keyword">import</span> java.sql.Statement;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Intercepts(&#123;</span><br><span class="hljs-meta">        @Signature(type = ResultSetHandler.class, method = &quot;handleResultSets&quot;, args = &#123;Statement.class&#125;)</span><br><span class="hljs-meta">&#125;)</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Sm4ResultInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Interceptor</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ISm4Service sm4Service;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">intercept</span><span class="hljs-params">(Invocation invocation)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        <span class="hljs-comment">// 取出查询的结果</span><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">resultObject</span> <span class="hljs-operator">=</span> invocation.proceed();<br>        <span class="hljs-keyword">if</span> (Objects.isNull(resultObject)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-comment">// 集合解密</span><br>        <span class="hljs-keyword">if</span> (resultObject <span class="hljs-keyword">instanceof</span> List&lt;?&gt;) &#123;<br>            List&lt;?&gt; resultList = (List&lt;?&gt;) resultObject;<br>            <span class="hljs-keyword">if</span> (!CollectionUtils.isEmpty(resultList)) &#123;<br>                <span class="hljs-keyword">for</span> (Object result : resultList) &#123;<br>                    sm4Service.decrypt(result);<br>                &#125;<br>            &#125;<br>            <span class="hljs-comment">// 单条解密</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            sm4Service.decrypt(resultObject);<br>        &#125;<br>        <span class="hljs-keyword">return</span> resultObject;<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>添加config配置类，bean交由spring管理</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.peace.common.mysql.handler.MybatisSqlInterceptor;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.interceptor.Sm4ParmeterInterceptor;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.interceptor.Sm4ResultInterceptor;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.service.ISm4Service;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybatisPlusConfig</span> &#123;<br><br><br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Sm4ParmeterInterceptor <span class="hljs-title function_">sm4ParmeterInterceptor</span><span class="hljs-params">(ISm4Service sm4Service)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sm4ParmeterInterceptor</span>(sm4Service);<br>    &#125;<br><br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Sm4ResultInterceptor <span class="hljs-title function_">sm4ResultInterceptor</span><span class="hljs-params">(ISm4Service sm4Service)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sm4ResultInterceptor</span>(sm4Service);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>后续可以将枚举注解抽离为对称与非对称两种注解，针对不同场景，增加扩展项</li></ul><h4 id="数据脱敏"><a href="#数据脱敏" class="headerlink" title="数据脱敏"></a>数据脱敏</h4><ul><li>敏感数据从数据库取出后，需要解密为真实数据，但是数据不能直接暴露给前端，需要进行脱敏，隐藏关键位数据。</li><li>即数据从controller层返回时，数据进行序列化时脱敏数据</li></ul><ol><li>新增数据脱敏策略类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.function.Function;<br><br><br><span class="hljs-meta">@FunctionalInterface</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">SensitiveStrategy</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取策略类型键值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 策略类型</span><br><span class="hljs-comment">     */</span><br>    Map&lt;String, Function&lt;String, String&gt;&gt; <span class="hljs-title function_">getStrategyFunctionMap</span><span class="hljs-params">()</span>;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>默认策略类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> cn.hutool.core.text.CharSequenceUtil;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.function.Function;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultSensitiveFactory</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">SensitiveStrategy</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">ID_CARD_SENSITIVE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;idCard&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">PHONE_NUM_SENSITIVE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;phoneNum&quot;</span>;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> SensitiveStrategy sensitiveStrategy;<br><br>    <span class="hljs-keyword">private</span> Map&lt;String, Function&lt;String, String&gt;&gt; functionMap;<br><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">DefaultSensitiveFactory</span><span class="hljs-params">()</span> &#123;<br>        initDefaultStrategy();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SensitiveStrategy <span class="hljs-title function_">getDefaultStrategy</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (Objects.isNull(sensitiveStrategy)) &#123;<br>            sensitiveStrategy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultSensitiveFactory</span>();<br>        &#125;<br>        <span class="hljs-keyword">return</span> sensitiveStrategy;<br>    &#125;<br><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">initDefaultStrategy</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.functionMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(<span class="hljs-number">4</span>);<br>      <span class="hljs-comment">// 添加默认实现，手机号/身份证脱敏策略</span><br>        functionMap.put(ID_CARD_SENSITIVE, (s) -&gt; CharSequenceUtil.hide(s, <span class="hljs-number">1</span>, s.length() - <span class="hljs-number">1</span>));<br>        functionMap.put(PHONE_NUM_SENSITIVE, (s) -&gt; CharSequenceUtil.hide(s, <span class="hljs-number">3</span>, s.length() - <span class="hljs-number">4</span>));<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Map&lt;String, Function&lt;String, String&gt;&gt; <span class="hljs-title function_">getStrategyFunctionMap</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> functionMap;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加策略</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> strategyName 策略名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> function oldStr, encStr转换</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 加密策略</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SensitiveStrategy <span class="hljs-title function_">addStrategy</span><span class="hljs-params">(</span><br><span class="hljs-params">            String strategyName,</span><br><span class="hljs-params">            Function&lt;String, String&gt; function)</span> &#123;<br>        <span class="hljs-type">SensitiveStrategy</span> <span class="hljs-variable">defaultStrategy</span> <span class="hljs-operator">=</span> getDefaultStrategy();<br>        Map&lt;String, Function&lt;String, String&gt;&gt; strategyFunctionMap = defaultStrategy.getStrategyFunctionMap();<br>        strategyFunctionMap.put(strategyName, function);<br>        <span class="hljs-keyword">return</span> defaultStrategy;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol><li>脱敏注解类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.fasterxml.jackson.annotation.JacksonAnnotationsInside;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonSerialize;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.serialize.SensitiveSerialize;<br><br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><br><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@JacksonAnnotationsInside</span><br><span class="hljs-meta">@JsonSerialize(</span><br><span class="hljs-meta">        using = SensitiveSerialize.class</span><br><span class="hljs-meta">)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> FieldSensitive &#123;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 策略类型</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 策略类型</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">value</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol><li>序列化类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.fasterxml.jackson.core.JsonGenerator;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.BeanProperty;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.JsonMappingException;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.JsonSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.SerializerProvider;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ser.ContextualSerializer;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.annotations.FieldSensitive;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.strategy.DefaultSensitiveFactory;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.strategy.SensitiveStrategy;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> lombok.EqualsAndHashCode;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.function.Function;<br><br><br><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SensitiveSerialize</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">JsonSerializer</span>&lt;String&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ContextualSerializer</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> SensitiveStrategy sensitiveStrategy;<br><br>    <span class="hljs-keyword">private</span> String type;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SensitiveSerialize</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.sensitiveStrategy = DefaultSensitiveFactory.getDefaultStrategy();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serialize</span><span class="hljs-params">(String value, JsonGenerator gen, SerializerProvider serializers)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        Function&lt;String, String&gt; function = sensitiveStrategy.getStrategyFunctionMap().get(type);<br>        <span class="hljs-keyword">if</span> (Objects.isNull(function)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;策略类型为空&quot;</span>);<br>        &#125;<br>        gen.writeString(function.apply(value));<br>    &#125;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> JsonSerializer&lt;?&gt; createContextual(SerializerProvider serializerProvider, BeanProperty property) <span class="hljs-keyword">throws</span> JsonMappingException &#123;<br>        <span class="hljs-keyword">if</span> (Objects.equals(property.getType().getRawClass(), String.class)) &#123;<br>            <span class="hljs-type">FieldSensitive</span> <span class="hljs-variable">fieldSensitive</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getAnnotation(property);<br>            <span class="hljs-keyword">if</span> (Objects.isNull(fieldSensitive)) &#123;<br>                <span class="hljs-keyword">return</span> serializerProvider.findNullValueSerializer(<span class="hljs-literal">null</span>);<br>            &#125;<br>            <span class="hljs-built_in">this</span>.setType(fieldSensitive.value());<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> serializerProvider.findKeySerializer(property.getType(), property);<br><br><br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> FieldSensitive <span class="hljs-title function_">getAnnotation</span><span class="hljs-params">(BeanProperty property)</span> &#123;<br>        <span class="hljs-keyword">return</span> Objects.isNull(property.getAnnotation(FieldSensitive.class))<br>                ? property.getContextAnnotation(FieldSensitive.class)<br>                : property.getAnnotation(FieldSensitive.class);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol><li>在返回的vo层，对需要脱敏的对象字段使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FieldSensitive(DefaultSensitiveFactory.PHONE_NUM_SENSITIVE)</span><br><span class="hljs-keyword">private</span> String phone;<br></code></pre></td></tr></table></figure><h4 id="数据权限拦截"><a href="#数据权限拦截" class="headerlink" title="数据权限拦截"></a>数据权限拦截</h4><ul><li><p>在系统中，需要针对每个角色制定不同的数据权限，如角色1，只能访问本部门的数据，角色2可以访问部门及其子部门的数据，所以需要在sql解析时拦截，对数据权限进行添加</p></li><li><p>这里选择实现Mybatis-plus的DataPermissionHandler，对数据权限进行处理</p><ol><li>数据权限枚举类</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">DataScopeEnum</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 自定义数据权限</span><br><span class="hljs-comment">     */</span><br>    ALL(<span class="hljs-number">1</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 自定义</span><br><span class="hljs-comment">     */</span><br>    CUSTOM(<span class="hljs-number">2</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 本部门</span><br><span class="hljs-comment">     */</span><br>    DEPT(<span class="hljs-number">3</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 部门及其子部门</span><br><span class="hljs-comment">     */</span><br>    DEPT_AND_SUB(<span class="hljs-number">4</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前用户</span><br><span class="hljs-comment">     */</span><br>    SELF(<span class="hljs-number">5</span>),<br>    ;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> scope;<br><br>    DataScopeEnum(<span class="hljs-type">int</span> scope) &#123;<br>        <span class="hljs-built_in">this</span>.scope = scope;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isAll</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-keyword">return</span> ALL.scope == value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isCustom</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-keyword">return</span> CUSTOM.scope == value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isDeptAndSub</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-keyword">return</span> DEPT_AND_SUB.scope == value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isDept</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-keyword">return</span> DEPT.scope == value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isSelf</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-keyword">return</span> SELF.scope == value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getScope</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> scope;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol><li>数据权限注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.peace.common.mysql.enums.DataScopeEnum;<br><br><span class="hljs-keyword">import</span> java.lang.annotation.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * 数据权限注解</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> fuhouyu</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2023/3/31 21:28</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Documented</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> DataPermission &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 部门表别名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 部门表别名</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">deptAlias</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 部门列名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 部门列名</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">deptColumn</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;dept_id&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户表别名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 用户表别名</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">userAlias</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户列</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 用户列</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">userColumn</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;create_user&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询的前缀</span><br><span class="hljs-comment">     * 在注解为类级别时，将会验证当前前缀是否为查询</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 查询的前缀</span><br><span class="hljs-comment">     */</span><br>    String[] queryPrefix() <span class="hljs-keyword">default</span> &#123;<span class="hljs-string">&quot;query&quot;</span>, <span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;select&quot;</span>&#125;;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否是左查询</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> true 是，默认为false</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">isLeftJoin</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当角色不存在时，默认的角色权限类型</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 当前自己创建的数据</span><br><span class="hljs-comment">     */</span><br>    DataScopeEnum <span class="hljs-title function_">defaultScopeEnum</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> DataScopeEnum.SELF;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol><li>自定义权限拦截器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> cn.hutool.core.util.StrUtil;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.handler.DataPermissionHandler;<br><span class="hljs-keyword">import</span> com.google.protobuf.Empty;<br><span class="hljs-keyword">import</span> com.peace.api.dept.SysDeptGrpc;<br><span class="hljs-keyword">import</span> com.peace.api.dept.SysDeptServiceGrpc;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.annotations.DataPermission;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.enums.DataScopeEnum;<br><span class="hljs-keyword">import</span> com.peace.common.util.context.UserThreadLocal;<br><span class="hljs-keyword">import</span> com.peace.common.util.pojo.SysDept;<br><span class="hljs-keyword">import</span> com.peace.common.util.pojo.SysRole;<br><span class="hljs-keyword">import</span> lombok.SneakyThrows;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> net.sf.jsqlparser.expression.Expression;<br><span class="hljs-keyword">import</span> net.sf.jsqlparser.expression.operators.conditional.AndExpression;<br><span class="hljs-keyword">import</span> net.sf.jsqlparser.parser.CCJSqlParserUtil;<br><span class="hljs-keyword">import</span> org.apache.commons.lang3.StringUtils;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CustomDataPermissionHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">DataPermissionHandler</span> &#123;<br><br>  <span class="hljs-comment">// gprc 远程调用的实现,用于获取部门集合</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> GRpcService deptService;<br><br>  <span class="hljs-comment">// 实现部门及子部门的左连接sql查询</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEPT_AND_SUB_LEFT_SQL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>  <span class="hljs-comment">// 自定义的部门权限查询</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">CUSTOM_LEFT_SQL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CustomDataPermissionHandler</span><span class="hljs-params">(GRpcService deptService)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptService = deptService;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@SneakyThrows</span><br>    <span class="hljs-keyword">public</span> Expression <span class="hljs-title function_">getSqlSegment</span><span class="hljs-params">(Expression where, String mappedStatementId)</span> &#123;<br>        Class&lt;?&gt; clazz = Class.forName(mappedStatementId.substring(<span class="hljs-number">0</span>, mappedStatementId.lastIndexOf(StringPool.DOT)));<br>        <span class="hljs-type">String</span> <span class="hljs-variable">currentMethodName</span> <span class="hljs-operator">=</span> mappedStatementId.substring(mappedStatementId.lastIndexOf(StringPool.DOT) + <span class="hljs-number">1</span>);<br>        Method[] methods = clazz.getDeclaredMethods();<br>        <span class="hljs-keyword">for</span> (Method method : methods) &#123;<br>            <span class="hljs-type">DataPermission</span> <span class="hljs-variable">dataPermission</span> <span class="hljs-operator">=</span> method.getAnnotation(DataPermission.class);<br>            <span class="hljs-keyword">if</span> (Objects.nonNull(dataPermission) &amp;&amp; Objects.equals(method.getName(), currentMethodName)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.dataScopeFilter(dataPermission, where);<br>            &#125;<br>        &#125;<br>        <span class="hljs-type">DataPermission</span> <span class="hljs-variable">dataPermission</span> <span class="hljs-operator">=</span> clazz.getAnnotation(DataPermission.class);<br>        <span class="hljs-comment">// 判断类</span><br>        <span class="hljs-keyword">if</span> (Objects.nonNull(dataPermission)) &#123;<br>            <span class="hljs-comment">// 类级别注解不为空，判断当前方法的值是否为该前缀</span><br>            String[] queryPrefix = dataPermission.queryPrefix();<br>            <span class="hljs-keyword">for</span> (String prefix : queryPrefix) &#123;<br>                <span class="hljs-keyword">if</span> (currentMethodName.startsWith(prefix)) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.dataScopeFilter(dataPermission, where);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> where;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 数据权限过滤</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dataPermission 数据权限注解</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> where          添加where 表达式</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 拼接后的sql表达式</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@SneakyThrows</span><br>    <span class="hljs-keyword">private</span> Expression <span class="hljs-title function_">dataScopeFilter</span><span class="hljs-params">(DataPermission dataPermission, Expression where)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">deptAlias</span> <span class="hljs-operator">=</span> dataPermission.deptAlias();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userAlias</span> <span class="hljs-operator">=</span> dataPermission.userAlias();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">deptColumn</span> <span class="hljs-operator">=</span> dataPermission.deptColumn();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userColumn</span> <span class="hljs-operator">=</span> dataPermission.userColumn();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">deptColumnName</span> <span class="hljs-operator">=</span> StrUtil.isNotBlank(deptAlias) ? (deptAlias + StringPool.DOT + deptColumn) : deptColumn;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userColumnName</span> <span class="hljs-operator">=</span> StrUtil.isNotBlank(userAlias) ? (userAlias + StringPool.DOT + userColumn) : userColumn;<br><br>        <span class="hljs-type">SysRole</span> <span class="hljs-variable">role</span> <span class="hljs-operator">=</span> UserThreadLocal.getBasicUser().getSysRole();<br>        <span class="hljs-type">SysDept</span> <span class="hljs-variable">sysDept</span> <span class="hljs-operator">=</span> UserThreadLocal.getBasicUser().getSysDept();<br><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">deptId</span> <span class="hljs-operator">=</span> Objects.nonNull(sysDept) ? sysDept.getId() : -<span class="hljs-number">1</span>;<br>        <span class="hljs-comment">// 如果用户不存在角色，为默认，则使他的值为当前自己</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">dataScope</span> <span class="hljs-operator">=</span> Objects.isNull(role) ? dataPermission.defaultScopeEnum().getScope() : role.getDataScope();<br><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-number">16</span>);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">leftJoin</span> <span class="hljs-operator">=</span> dataPermission.isLeftJoin();<br>        <span class="hljs-keyword">if</span> (DataScopeEnum.isAll(dataScope)) &#123;<br>            <span class="hljs-comment">// 返回所有的权限</span><br>            <span class="hljs-keyword">return</span> where;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (DataScopeEnum.isCustom(dataScope)) &#123;<br>            <span class="hljs-comment">// 自定义数据权限</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> leftJoin ?<br>                    String.format(CUSTOM_LEFT_SQL, role.getId()) : <span class="hljs-built_in">this</span>.concatRpcDeptDataScopeSql();<br>            sb.append(deptColumnName)<br>                    .append(sql);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (DataScopeEnum.isDeptAndSub(dataScope)) &#123;<br>            <span class="hljs-comment">// 当前部门及其子部门的数据权限</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> leftJoin ?<br>                    String.format(DEPT_AND_SUB_LEFT_SQL, deptId) : <span class="hljs-built_in">this</span>.concatRpcDeptDataScopeSql();<br>            sb.append(deptColumnName)<br>                    .append(sql);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (DataScopeEnum.isDept(dataScope)) &#123;<br>            <span class="hljs-comment">// 仅当前部门的数据权限</span><br>            sb.append(deptColumnName).append(<span class="hljs-string">&quot; = &quot;</span>).append(deptId);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 当前用户的数据权限</span><br>            sb.append(userColumnName).append(<span class="hljs-string">&quot; = &quot;</span>).append(<span class="hljs-string">&quot;&#x27;&quot;</span>).append(UserThreadLocal.getBasicUser().getUsername()).append(<span class="hljs-string">&quot;&#x27;&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> sb.toString();<br>        <span class="hljs-keyword">if</span> (StringUtils.isAllBlank(sql)) &#123;<br>            <span class="hljs-keyword">return</span> where;<br>        &#125;<br>        <span class="hljs-type">Expression</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> CCJSqlParserUtil.parseExpression(sql);<br>        <span class="hljs-keyword">if</span> (Objects.isNull(where)) &#123;<br>            <span class="hljs-keyword">return</span> expression;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AndExpression</span>(where, expression);<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 拼接部门sql</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 部门sql</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">concatRpcDeptDataScopeSql</span><span class="hljs-params">()</span> &#123;<br>        SysDeptGrpc.<span class="hljs-type">DataScopeResult</span> <span class="hljs-variable">userDataScope</span> <span class="hljs-operator">=</span> deptService.getDeptIdListByCurrentUserDataScope(Empty.newBuilder().build());<br>        List&lt;Long&gt; deptIdList = userDataScope.getDeptIdListList();<br>        <span class="hljs-keyword">if</span> (deptIdList.isEmpty()) &#123;<br>            deptIdList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;(<span class="hljs-number">1</span>);<br>            log.warn(<span class="hljs-string">&quot;用户的自定义角色数据权限为空&quot;</span>);<br>            deptIdList.add(-<span class="hljs-number">1L</span>);<br>        &#125;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-string">&quot; IN (&quot;</span>);<br>        <span class="hljs-keyword">for</span> (Long deptId : deptIdList) &#123;<br>            sb.append(deptId)<br>                    .append(<span class="hljs-string">&quot;,&quot;</span>);<br>        &#125;<br>        sb.deleteCharAt(sb.length() - <span class="hljs-number">1</span>);<br>        sb.append(<span class="hljs-string">&quot;)&quot;</span>);<br>        <span class="hljs-keyword">return</span> sb.toString();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h5><ul><li>在使用pageHelper和dataPermissionHandler时，分页插件获取count的拦截，要优先处理于数据权限的处理器，所以要设置插件的顺序</li><li>在<a href="https://github.com/pagehelper/pagehelper-spring-boot">pageHelper</a>的文档中有如下文档</li></ul><p><img src="https://img.fuhouyu.com/2023-04-09-025307.png" alt=""></p><ul><li>关于插件顺序的讲解，具体可看<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/Interceptor.md">Executor 拦截器高级教程</a></li></ul><p>所以在配置类中，添加如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.DataPermissionInterceptor;<br><span class="hljs-keyword">import</span> com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration;<br><span class="hljs-keyword">import</span> com.peace.api.dept.SysDeptServiceGrpc;<br><span class="hljs-keyword">import</span> com.peace.common.mysql.handler.CustomDataPermissionHandler;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> net.devh.boot.grpc.client.inject.GrpcClient;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.InitializingBean;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.AutoConfigureAfter;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.ComponentScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(basePackageClasses = MybatisPlusAutoConfiguration.class)</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-comment">// 使当前配置，在分页插件之后执行</span><br><span class="hljs-meta">@AutoConfigureAfter(PageHelperAutoConfiguration.class)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybatisPlusAutoConfiguration</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">InitializingBean</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> List&lt;SqlSessionFactory&gt; sqlSessionFactoryList;<br><br>  <span class="hljs-comment">// 远程调用</span><br>    <span class="hljs-keyword">private</span> GRpcService deptService;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterPropertiesSet</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">for</span> (SqlSessionFactory sqlSessionFactory : sqlSessionFactoryList) &#123;<br>            org.apache.ibatis.session.<span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> sqlSessionFactory.getConfiguration();<br>            configuration.addInterceptor(mybatisPlusInterceptor());<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockAttackInnerInterceptor</span>());<br>        <span class="hljs-type">DataPermissionInterceptor</span> <span class="hljs-variable">dataPermissionInterceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataPermissionInterceptor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CustomDataPermissionHandler</span>(deptService));<br>        interceptor.addInnerInterceptor(dataPermissionInterceptor);<br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins 自动化流水线部署</title>
      <link href="/2023/04/08/Linux/Jenkins%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/04/08/Linux/Jenkins%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h4 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h4><h5 id="安装docker-containerd"><a href="#安装docker-containerd" class="headerlink" title="安装docker/containerd"></a>安装docker/containerd</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install docker<br></code></pre></td></tr></table></figure><h5 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install git<br></code></pre></td></tr></table></figure><p>安装maven/mvnd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载mvnd</span><br>wget https://github.com/apache/maven-mvnd/releases/download/1.0-m6/maven-mvnd-1.0-m6-m39-linux-amd64.zip<br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压mvnd</span><br>unzip maven-mvnd-1.0-m6-m39-linux-amd64.zip -d ./mvnd<br><br></code></pre></td></tr></table></figure><h5 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h5><p><a href="https://www.jenkins.io/zh/download/">Jenkins 的安装和设置</a></p><h6 id="安装必备插件"><a href="#安装必备插件" class="headerlink" title="安装必备插件"></a>安装必备插件</h6><ol><li><p>打开jenkins页面后，根据提示更新</p></li><li><p>更新<a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">jenkins镜像源</a></p></li><li><p>下载必备Docker Pipeline</p><p><img src="https://img.fuhouyu.com/2023-04-08-130735.png" alt=""></p></li><li><p>在全局工具中，定义maven</p></li><li><p>定义jenkins的git凭据，复制git凭据id</p></li></ol><h6 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h6><p>新版本的jenkins配置文件在：<code>/usr/lib/systemd/system/jenkins.service</code>目录下</p><p>jenkins新版本至少需要jdk11才可以，如果在之前已经安装过jdk，且小于11，可能会出现无法启动的情况，需要更新环境变量</p><h5 id="打包部署java项目"><a href="#打包部署java项目" class="headerlink" title="打包部署java项目"></a>打包部署java项目</h5><ol><li>新建项目，选择流水线</li></ol><p><img src="https://img.fuhouyu.com/2023-04-08-130916.png" alt=""></p><ol><li><p>勾选选项参数</p><ol><li>添加git选项url</li><li>添加文本参数branch</li><li>添加选项参数 harborUrl，harbor镜像地址</li><li>添加选项参数 k8s_master, master主节点地址</li><li>添加文本参数 service，java模块地址</li><li>添加文件参数 depth，jar目录深度</li></ol><p>如下图所示</p><p><img src="https://img.fuhouyu.com/2023-04-08-142129.png" alt=""></p></li><li><p>使用流水线，定义脚本</p><p><img src="https://img.fuhouyu.com/2023-04-08-131136.png" alt=""></p><p>脚本如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><code class="hljs groovy">node &#123;<br>  <span class="hljs-comment">// maven 工具</span><br>  <span class="hljs-keyword">def</span> mvn = tool <span class="hljs-string">&#x27;maven&#x27;</span>;<br>  <span class="hljs-comment">// 版本号，以当前时间戳</span><br>  <span class="hljs-keyword">def</span> version = <span class="hljs-string">&quot;v&quot;</span> + sh(<span class="hljs-attr">script:</span> <span class="hljs-string">&quot;date &#x27;+%s&#x27;&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span>).trim()<br>  <span class="hljs-comment">// 读取的properties 示例如下</span><br>  <span class="hljs-keyword">def</span> properties = readProperties <span class="hljs-attr">file:</span> <span class="hljs-string">&#x27;/ddhome/data/jenkins/service.properties&#x27;</span><br>  <span class="hljs-comment">// 镜像标签</span><br>  <span class="hljs-keyword">def</span> imageTags = []<br>  <span class="hljs-comment">// k8s 模板</span><br>  <span class="hljs-keyword">def</span> k8sTemplates = []<br>  <span class="hljs-keyword">def</span> baseHarborUrl = <span class="hljs-string">&quot;$&#123;harborUrl&#125;&quot;</span>.tokenize(<span class="hljs-string">&#x27;/&#x27;</span>).last()<br>  <span class="hljs-comment">// java启动脚本</span><br>  <span class="hljs-keyword">def</span> startup = <span class="hljs-string">&#x27;&#x27;&#x27;#!/bin/bash</span><br><span class="hljs-string">JAVA_OPT=&quot;java&quot;</span><br><span class="hljs-string">BASE_DIR=&quot;/home/data&quot;</span><br><span class="hljs-string">SERVICE_NAME=$1</span><br><span class="hljs-string">ACTIVE=$2</span><br><span class="hljs-string">PARAM=$3</span><br><span class="hljs-string">#===========================================================================================</span><br><span class="hljs-string"># JVM Configuration</span><br><span class="hljs-string">#===========================================================================================</span><br><span class="hljs-string">if  [[ &quot;$JVM_XMS&quot; != &quot;&quot; ]] ;then</span><br><span class="hljs-string">  JVM_OPT=&quot;$JVM_OPT -Xms$&#123;JVM_XMS&#125;&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">if [[ &quot;$JVM_XMX&quot; != &quot;&quot; ]]; then</span><br><span class="hljs-string">  JVM_OPT=&quot;$JVM_OPT -Xmx$&#123;JVM_XMX&#125;&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">if [[ &quot;$&#123;DEBUG_ENABLED&#125;&quot; == &quot;y&quot; ]]; then</span><br><span class="hljs-string">  JVM_OPT=&quot;$JVM_OPT -Xrunjdwp:transport=dt_socket,address=*:10000,server=y,suspend=n&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">if [[ &quot;$JVM_OTHER_PARAMS&quot; != &quot;&quot; ]]; then</span><br><span class="hljs-string">  JVM_OPT=&quot;$JVM_OPT $&#123;JVM_OTHER_PARAMS&#125;&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">if [[ &quot;$DUMP_LOG&quot; == &quot;&quot; ]]; then</span><br><span class="hljs-string">  DUMP_LOG=&quot;/var/log/java_heapdump.hprof&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">if [[ &quot;$JAVA_LOG&quot; == &quot;&quot; ]]; then</span><br><span class="hljs-string">  JAVA_LOG=&quot;-Xlog:gc*=debug:file=/var/log/gc.log:utctime,level,tags:filecount=30,filesize=100M&quot;</span><br><span class="hljs-string">fi</span><br><span class="hljs-string">JVM_OPT=&quot;$JVM_OPT -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$DUMP_LOG&quot;</span><br><span class="hljs-string">JVM_OPT=&quot;$JVM_OPT $JAVA_LOG&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">#===========================================================================================</span><br><span class="hljs-string"># Setting system properties</span><br><span class="hljs-string">#===========================================================================================</span><br><span class="hljs-string">JAVA_OPT=&quot;$JAVA_OPT -jar -DSpring.profiles.active=$ACTIVE $PARAM $START_PARAM $JVM_OPT $&#123;BASE_DIR&#125;/$SERVICE_NAME*.jar&quot;</span><br><span class="hljs-string">$JAVA_OPT</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>  stage(<span class="hljs-string">&#x27;拉取代码&#x27;</span>)&#123;<br>  echo <span class="hljs-string">&quot;git pull code&quot;</span><br>    <span class="hljs-comment">// 拉取代码，这里的credentialsId 需要在jenkins的凭据中定义</span><br>  git(<span class="hljs-attr">url:</span> <span class="hljs-string">&quot;$&#123;git&#125;&quot;</span>, <span class="hljs-attr">branch:</span> <span class="hljs-string">&quot;$&#123;branch&#125;&quot;</span>, <span class="hljs-attr">credentialsId:</span> <span class="hljs-string">&quot;128ee387-1deb-4241-87ae-dfeaeaec448d&quot;</span>)<br>  &#125;<br><br>  <span class="hljs-comment">// mvnd编译代码</span><br>  stage(<span class="hljs-string">&#x27;编译代码&#x27;</span>)&#123;<br>echo <span class="hljs-string">&quot;编译代码&quot;</span><br>sh <span class="hljs-string">&quot;$&#123;mvn&#125;/bin/mvnd clean install -Dmaven.test.skip=true&quot;</span><br>&#125;<br><br>  stage(<span class="hljs-string">&#x27;构建docker镜像&#x27;</span>) &#123;<br>    <span class="hljs-keyword">def</span> serviceArray = <span class="hljs-string">&quot;$&#123;service&#125;&quot;</span>.split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>    <span class="hljs-keyword">for</span>(serviceName <span class="hljs-keyword">in</span> serviceArray)&#123;<br>      <span class="hljs-comment">// 基本镜像地址</span><br>      <span class="hljs-keyword">def</span> imageName = <span class="hljs-string">&quot;$&#123;baseHarborUrl&#125;/$&#123;branch&#125;/$&#123;serviceName&#125;&quot;</span><br>      <span class="hljs-keyword">def</span> jarPath = <span class="hljs-string">&quot;$&#123;env.WORKSPACE&#125;/$&#123;&#x27;**/&#x27; * depth.toInteger()&#125;/$&#123;serviceName&#125;/target/$&#123;serviceName&#125;*.jar&quot;</span><br>        echo <span class="hljs-string">&quot;jar路径:$&#123;jarPath&#125;&quot;</span><br>        <span class="hljs-keyword">def</span> tag = <span class="hljs-string">&quot;$&#123;imageName&#125;:$&#123;version&#125;&quot;</span><br>        echo <span class="hljs-string">&quot;tag is $&#123;tag&#125;&quot;</span><br>        <span class="hljs-keyword">def</span> dockerfileContent = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">                FROM openjdk:11.0.14.1-jre</span><br><span class="hljs-string">                COPY ./$&#123;serviceName&#125;.jar /home/data/$&#123;serviceName&#125;.jar</span><br><span class="hljs-string">                COPY ./startup.sh /home/data/startup.sh</span><br><span class="hljs-string">                RUN cp -r -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="hljs-string">                    &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone \</span><br><span class="hljs-string">                    &amp;&amp; chmod +x /root/data/startup.sh \</span><br><span class="hljs-string">                    &amp;&amp; echo &gt; /etc/apt/sources.list \</span><br><span class="hljs-string">                    &amp;&amp; echo  &quot;deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib \ndeb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib \ndeb http://mirrors.aliyun.com/debian-security stretch/updates main \ndeb-src http://mirrors.aliyun.com/debian-security stretch/updates main \ndeb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib \ndeb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib \ndeb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib \ndeb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib&quot; &gt; /etc/apt/sources.list </span><br><span class="hljs-string">            &quot;&quot;&quot;</span><br>      <span class="hljs-comment">// cpu限制</span><br>         <span class="hljs-keyword">def</span> cpuLimit = properties[<span class="hljs-string">&quot;$&#123;serviceName&#125;.cpu.limit&quot;</span>]<br>      <span class="hljs-comment">// 内存限制</span><br>         <span class="hljs-keyword">def</span> memoryLimit = properties[<span class="hljs-string">&quot;$&#123;serviceName&#125;.memory.limit&quot;</span>]<br>      <span class="hljs-comment">// http端口</span><br>         <span class="hljs-keyword">def</span> httpPort = properties[<span class="hljs-string">&quot;$&#123;serviceName&#125;.port&quot;</span>]<br>      <span class="hljs-comment">// debug端口</span><br>         <span class="hljs-keyword">def</span> debugPort = properties[<span class="hljs-string">&quot;$&#123;serviceName&#125;.debug.port&quot;</span>]<br>      <span class="hljs-comment">// k8s模板</span><br>         <span class="hljs-keyword">def</span> k8sTemplate =<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">apiVersion: apps/v1</span><br><span class="hljs-string">kind: Deployment</span><br><span class="hljs-string">metadata:</span><br><span class="hljs-string">  name: $&#123;serviceName&#125;</span><br><span class="hljs-string">  namespace: iot-test</span><br><span class="hljs-string">spec:</span><br><span class="hljs-string">  selector:</span><br><span class="hljs-string">    matchLabels:</span><br><span class="hljs-string">      app: $&#123;serviceName&#125;</span><br><span class="hljs-string">  template:</span><br><span class="hljs-string">    metadata:</span><br><span class="hljs-string">      labels:</span><br><span class="hljs-string">        app: $&#123;serviceName&#125;</span><br><span class="hljs-string">    spec:</span><br><span class="hljs-string">      imagePullSecrets:</span><br><span class="hljs-string">        - name: harbor-secret</span><br><span class="hljs-string">      containers:</span><br><span class="hljs-string">        - name: $&#123;serviceName&#125;</span><br><span class="hljs-string">          image: $&#123;tag&#125;</span><br><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><br><span class="hljs-string">          command: [&quot;/home/data/startup.sh&quot;]</span><br><span class="hljs-string">          args: [&quot;$&#123;serviceName&#125;&quot;, &quot;test&quot;]</span><br><span class="hljs-string">          resources:</span><br><span class="hljs-string">           limits:</span><br><span class="hljs-string">            cpu: $&#123;cpuLimit&#125;</span><br><span class="hljs-string">            memory: $&#123;memoryLimit&#125;</span><br><span class="hljs-string">          volumeMounts:</span><br><span class="hljs-string">            - name: resource</span><br><span class="hljs-string">              mountPath: /ddhome/resource</span><br><span class="hljs-string">            - name: log</span><br><span class="hljs-string">              mountPath: /var/log</span><br><span class="hljs-string">              subPath: $&#123;serviceName&#125;</span><br><span class="hljs-string">      volumes:</span><br><span class="hljs-string">        - name: resource</span><br><span class="hljs-string">          hostPath:</span><br><span class="hljs-string">            path: /ddhome/resource</span><br><span class="hljs-string">        - name: log</span><br><span class="hljs-string">          hostPath:</span><br><span class="hljs-string">            path: /ddhome/log/service</span><br><span class="hljs-string">---</span><br><span class="hljs-string">apiVersion: v1</span><br><span class="hljs-string">kind: Service</span><br><span class="hljs-string">metadata:</span><br><span class="hljs-string">  name: $&#123;serviceName&#125;</span><br><span class="hljs-string">  namespace: iot-test</span><br><span class="hljs-string">spec:</span><br><span class="hljs-string">  selector:</span><br><span class="hljs-string">    app: $&#123;serviceName&#125;</span><br><span class="hljs-string">  type: NodePort</span><br><span class="hljs-string">  ports:</span><br><span class="hljs-string">    - name: http</span><br><span class="hljs-string">      port: $&#123;httpPort&#125;</span><br><span class="hljs-string">      targetPort: $&#123;httpPort&#125;</span><br><span class="hljs-string">      nodePort: $&#123;httpPort&#125;</span><br><span class="hljs-string">    - name: debug</span><br><span class="hljs-string">      port: $&#123;debugPort&#125;</span><br><span class="hljs-string">      targetPort: $&#123;debugPort&#125;</span><br><span class="hljs-string">      nodePort: $&#123;debugPort&#125;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>      <span class="hljs-comment">// 写入dockerfile文件</span><br>        writeFile <span class="hljs-attr">file:</span> <span class="hljs-string">&quot;/tmp/$&#123;serviceName&#125;/Dockerfile&quot;</span>, <span class="hljs-attr">text:</span> dockerfileContent<br>      <span class="hljs-comment">// 写入启动脚本</span><br>        writeFile <span class="hljs-attr">file:</span> <span class="hljs-string">&quot;/tmp/$&#123;serviceName&#125;/startup.sh&quot;</span>, <span class="hljs-attr">text:</span> startup<br>      <span class="hljs-comment">// 拷贝jar路径</span><br>        sh <span class="hljs-string">&quot;cp $&#123;jarPath&#125; /tmp/$&#123;serviceName&#125;/$&#123;serviceName&#125;.jar&quot;</span><br>      <span class="hljs-comment">// docker build </span><br>        <span class="hljs-keyword">def</span> app = docker.build(tag, <span class="hljs-string">&quot;-f /tmp/$&#123;serviceName&#125;/Dockerfile /tmp/$&#123;serviceName&#125;&quot;</span>)<br>      <span class="hljs-comment">// 添加标签到数组</span><br>        imageTags += tag<br>      <span class="hljs-comment">// 写入k8s模板文件，添加进数组</span><br>        <span class="hljs-keyword">def</span> k8sYaml = <span class="hljs-string">&quot;/tmp/$&#123;serviceName&#125;/$&#123;serviceName&#125;.yaml&quot;</span><br>        writeFile <span class="hljs-attr">file:</span> k8sYaml, <span class="hljs-attr">text:</span> k8sTemplate<br>        k8sTemplates += k8sYaml<br>    &#125;<br>  &#125;<br><br>  stage(<span class="hljs-string">&#x27;推送docker镜像&#x27;</span>)&#123;<br>    <span class="hljs-keyword">for</span>(tag <span class="hljs-keyword">in</span> imageTags)&#123;<br>          <span class="hljs-keyword">def</span> dockerImage = docker.image(<span class="hljs-string">&quot;$&#123;tag&#125;&quot;</span>)<br>      docker.withRegistry(<span class="hljs-string">&quot;$&#123;harborUrl&#125;&quot;</span>, <span class="hljs-string">&#x27;1ecaf8ab-14ad-4890-befd-b58c178e1b61&#x27;</span>) &#123;<br>            dockerImage.push()<br>          &#125;<br>        &#125;<br>    &#125;<br><br>   stage(<span class="hljs-string">&#x27;发布到K8s镜像&#x27;</span>)&#123;<br>    <span class="hljs-keyword">for</span>(template <span class="hljs-keyword">in</span> k8sTemplates)&#123;<br>        <span class="hljs-keyword">def</span> name = template.tokenize(<span class="hljs-string">&#x27;/&#x27;</span>).last()<br>        echo <span class="hljs-string">&quot;写入文件&quot;</span><br>         sh <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">             cat &quot;$&#123;template&#125;&quot; | ssh root@&quot;$&#123;k8s_master&#125;&quot; &quot;cat &gt; /ddhome/k8s/$&#123;name&#125;;kubectl delete -f /ddhome/k8s/$&#123;name&#125;; kubectl apply -f /ddhome/k8s/$&#123;name&#125;&quot;</span><br><span class="hljs-string">            &quot;&quot;&quot;</span><br>     &#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>service.properties示例</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># 网关配置</span><br> <span class="hljs-attr">service-gateway.port</span>=<span class="hljs-string">28082</span><br> <span class="hljs-attr">service-gateway.debug.port</span>=<span class="hljs-string">38082</span><br> <span class="hljs-attr">service-gateway.cpu.limit</span>=<span class="hljs-string">&quot;500m&quot;</span><br> <span class="hljs-attr">service-gateway.memory.limit</span>=<span class="hljs-string">&quot;1024Mi&quot;</span><br></code></pre></td></tr></table></figure><p>构建结果如下</p><p><img src="https://img.fuhouyu.com/2023-04-08-143033.png" alt=""></p></li></ol><h5 id="打包部署前端js-容器化"><a href="#打包部署前端js-容器化" class="headerlink" title="打包部署前端js(容器化)"></a>打包部署前端js(容器化)</h5><ol><li><p>新建流水线项目</p></li><li><p>勾选选项参数</p><ol><li>添加选项参数git，添加代码仓地址</li><li>添加分支branch参数</li><li>添加选项参数 harborUrl，harbor镜像地址</li><li>添加选项参数 k8s_master, master主节点地址</li><li>添加文本visitPath参数，通过ingress-nginx访问的后缀url</li><li>添加选项参数buildPath</li></ol><p><img src="https://img.fuhouyu.com/2023-04-08-150731.png" alt=""></p></li></ol><p>脚本如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs groovy">node &#123;<br>    <span class="hljs-comment">// 时间戳的版本号</span><br>    <span class="hljs-keyword">def</span> version = <span class="hljs-string">&quot;v&quot;</span> + sh(<span class="hljs-attr">script:</span> <span class="hljs-string">&quot;date &#x27;+%s&#x27;&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span>).trim()<br>  <span class="hljs-comment">// 标签号</span><br>    <span class="hljs-keyword">def</span> tag = <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-comment">// k8s存储的yaml</span><br>    <span class="hljs-keyword">def</span> k8sTemplatePath = <span class="hljs-string">&quot;/tmp/$&#123;env.JOB_NAME&#125;/$&#123;env.JOB_NAME&#125;.yaml&quot;</span><br>  <span class="hljs-comment">// 可访问的url地址</span><br>    <span class="hljs-keyword">def</span> path = <span class="hljs-string">&quot;$&#123;visitPath&#125;&quot;</span> ? <span class="hljs-string">&quot;$&#123;visitPath&#125;&quot;</span> : <span class="hljs-string">&quot;$&#123;env.JOB_NAME&#125;&quot;</span><br>  <span class="hljs-comment">// 基本的url</span><br>    <span class="hljs-keyword">def</span> baseHarborUrl = <span class="hljs-string">&quot;$&#123;harborUrl&#125;&quot;</span>.tokenize(<span class="hljs-string">&#x27;/&#x27;</span>).last()<br>stage(<span class="hljs-string">&#x27;拉取代码&#x27;</span>)&#123;<br>echo <span class="hljs-string">&quot;git pull code&quot;</span><br>git(<span class="hljs-attr">url:</span> <span class="hljs-string">&quot;$&#123;git&#125;&quot;</span>, <span class="hljs-attr">branch:</span> <span class="hljs-string">&quot;$&#123;branch&#125;&quot;</span>, <span class="hljs-attr">credentialsId:</span> <span class="hljs-string">&quot;128ee387-1deb-4241-87ae-dfeaeaec448d&quot;</span>)<br>&#125;<br><br>  <span class="hljs-comment">// 编译代码</span><br>stage(<span class="hljs-string">&#x27;编译代码&#x27;</span>)&#123;<br>echo <span class="hljs-string">&quot;编译代码&quot;</span><br><span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;$&#123;branch&#125;&quot;</span> == <span class="hljs-string">&#x27;master&#x27;</span>)&#123;<br>    sh <span class="hljs-string">&quot;rm -rf node_modules package-lock.json &amp;&amp; source /etc/profile &amp;&amp; npm install  --legacy-peer-deps &amp;&amp; npm run build:prod&quot;</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    sh <span class="hljs-string">&quot;rm -rf node_modules package-lock.json &amp;&amp; source /etc/profile &amp;&amp; npm install  --legacy-peer-deps &amp;&amp; npm run build:$&#123;branch&#125;&quot;</span><br>&#125;<br><br>&#125;<br><br>stage(<span class="hljs-string">&#x27;构建docker镜像&#x27;</span>)&#123;<br>    echo <span class="hljs-string">&quot;容器静态文件存放目录为: $path&quot;</span><br>        <span class="hljs-keyword">def</span> dockerfileContent = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">            FROM nginx:stable-alpine3.17</span><br><span class="hljs-string">            RUN apk add tzdata &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone \</span><br><span class="hljs-string">                    &amp;&amp; apk del tzdata</span><br><span class="hljs-string">            COPY &quot;./dist&quot; /usr/share/nginx/html/$&#123;path&#125;</span><br><span class="hljs-string">          &quot;&quot;&quot;</span><br>        tag = <span class="hljs-string">&quot;$&#123;baseHarborUrl&#125;/$&#123;branch&#125;/$&#123;env.JOB_NAME&#125;:$&#123;version&#125;&quot;</span><br>        <span class="hljs-keyword">def</span> k8sTemplate = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">apiVersion: apps/v1</span><br><span class="hljs-string">kind: Deployment</span><br><span class="hljs-string">metadata:</span><br><span class="hljs-string">  name: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">  namespace: $&#123;BRANCH&#125;</span><br><span class="hljs-string">spec:</span><br><span class="hljs-string">  selector:</span><br><span class="hljs-string">    matchLabels:</span><br><span class="hljs-string">      app: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">  template:</span><br><span class="hljs-string">    metadata:</span><br><span class="hljs-string">      labels:</span><br><span class="hljs-string">        app: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">    spec:</span><br><span class="hljs-string">      imagePullSecrets:</span><br><span class="hljs-string">        - name: harbor-secret</span><br><span class="hljs-string">      containers:</span><br><span class="hljs-string">        - name: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">          image: $&#123;tag&#125;</span><br><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><br><span class="hljs-string">          volumeMounts:</span><br><span class="hljs-string">            - name: resource</span><br><span class="hljs-string">              mountPath: /ddhome/resource</span><br><span class="hljs-string">            - name: log</span><br><span class="hljs-string">              mountPath: /var/log/nginx</span><br><span class="hljs-string">              subPath: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">      volumes:</span><br><span class="hljs-string">        - name: resource</span><br><span class="hljs-string">          hostPath:</span><br><span class="hljs-string">            path: /ddhome/resource</span><br><span class="hljs-string">        - name: log</span><br><span class="hljs-string">          hostPath:</span><br><span class="hljs-string">            path: /ddhome/log/nginx</span><br><span class="hljs-string">---</span><br><span class="hljs-string">apiVersion: v1</span><br><span class="hljs-string">kind: Service</span><br><span class="hljs-string">metadata:</span><br><span class="hljs-string">  name: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">  namespace: $&#123;BRANCH&#125;</span><br><span class="hljs-string">spec:</span><br><span class="hljs-string">  selector:</span><br><span class="hljs-string">    app: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">  ports:</span><br><span class="hljs-string">    - name: http</span><br><span class="hljs-string">      port: 80</span><br><span class="hljs-string">      targetPort: 80</span><br><span class="hljs-string">---</span><br><span class="hljs-string">apiVersion: networking.k8s.io/v1</span><br><span class="hljs-string">kind: Ingress</span><br><span class="hljs-string">metadata:</span><br><span class="hljs-string">  name: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">  namespace: $&#123;branch&#125;</span><br><span class="hljs-string">  annotations:</span><br><span class="hljs-string">    nginx.ingress.kubernetes.io/use-regex: &quot;true&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">spec:</span><br><span class="hljs-string">  rules:</span><br><span class="hljs-string">    - host:</span><br><span class="hljs-string">      http:</span><br><span class="hljs-string">        paths:</span><br><span class="hljs-string">          - path: /$&#123;path&#125;</span><br><span class="hljs-string">            pathType: Prefix</span><br><span class="hljs-string">            backend:</span><br><span class="hljs-string">              service:</span><br><span class="hljs-string">                name: $&#123;env.JOB_NAME&#125;</span><br><span class="hljs-string">                port:</span><br><span class="hljs-string">                  number: 80</span><br><span class="hljs-string">  ingressClassName: nginx</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        writeFile <span class="hljs-attr">file:</span> <span class="hljs-string">&quot;/tmp/$&#123;env.JOB_NAME&#125;/Dockerfile&quot;</span>, <span class="hljs-attr">text:</span> dockerfileContent<br>        sh <span class="hljs-string">&quot;cp -rf ./$&#123;buildPath&#125; /tmp/$&#123;env.JOB_NAME&#125;/dist&quot;</span><br>        <span class="hljs-keyword">def</span> app = docker.build(tag, <span class="hljs-string">&quot;-f /tmp/$&#123;env.JOB_NAME&#125;/Dockerfile /tmp/$&#123;env.JOB_NAME&#125;&quot;</span>)<br>        sh <span class="hljs-string">&quot;rm -rf /tmp/$&#123;env.JOB_NAME&#125;/dist&quot;</span><br>        writeFile <span class="hljs-attr">file:</span> k8sTemplatePath, <span class="hljs-attr">text:</span> k8sTemplate<br>&#125;<br><br><br>stage(<span class="hljs-string">&#x27;推送镜像&#x27;</span>)&#123;<br>        <span class="hljs-keyword">def</span> dockerImage = docker.image(<span class="hljs-string">&quot;$&#123;tag&#125;&quot;</span>)<br>        docker.withRegistry(<span class="hljs-string">&quot;$&#123;harborUrl&#125;&quot;</span>, <span class="hljs-string">&quot;1ecaf8ab-14ad-4890-befd-b58c178e1b61&quot;</span>) &#123;<br>        dockerImage.push()<br>        &#125;<br>&#125;<br><br><br>stage(<span class="hljs-string">&#x27;发布k8s集群&#x27;</span>)&#123;<br>           <span class="hljs-keyword">if</span> ((<span class="hljs-string">&quot;$&#123;branch&#125;&quot;</span>.contains(<span class="hljs-string">&quot;master&quot;</span>)))&#123;<br>            echo <span class="hljs-string">&quot;当前镜像版本号: $&#123;tag&#125;&quot;</span><br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>                 <span class="hljs-keyword">def</span> name = k8sTemplatePath.tokenize(<span class="hljs-string">&#x27;/&#x27;</span>).last()<br>                  sh <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">                       cat &quot;$&#123;k8sTemplatePath&#125;&quot; | ssh root@$&#123;k8s_master&#125; &quot;cat &gt; /ddhome/k8s/$&#123;name&#125;;kubectl delete -f /ddhome/k8s/$&#123;name&#125;; kubectl apply -f /ddhome/k8s/$&#123;name&#125;&quot;</span><br><span class="hljs-string">                      &quot;&quot;&quot;</span><br>           &#125;<br>           &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>安装如下：</p><p><img src="https://img.fuhouyu.com/2023-04-08-150551.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 使用nfs作为存储卷</title>
      <link href="/2023/04/08/Linux/Kubernetes%20%E9%83%A8%E7%BD%B2%E5%AD%98%E5%82%A8%E5%8D%B7/"/>
      <url>/2023/04/08/Linux/Kubernetes%20%E9%83%A8%E7%BD%B2%E5%AD%98%E5%82%A8%E5%8D%B7/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Kubernetes 不包含内部 NFS 配置器。需要使用外部配置程序来创建 NFS 存储类</p><p><a href="[GitHub - kubernetes-sigs/nfs-subdir-external-provisioner：远程 NFS 服务器上的动态 sub-dir volume provisioner。](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner">NFS外部配置程序</a>)</p></li></ul><h5 id="安装nfs-server"><a href="#安装nfs-server" class="headerlink" title="安装nfs-server"></a>安装nfs-server</h5><h6 id="安装-启动nfs-server"><a href="#安装-启动nfs-server" class="headerlink" title="安装/启动nfs-server"></a>安装/启动nfs-server</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装nfs-utils</span><br>yum install nfs-utils<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动nfs服务器</span><br>systemctl restart nfs-server<br></code></pre></td></tr></table></figure><h6 id="设置共享目录"><a href="#设置共享目录" class="headerlink" title="设置共享目录"></a>设置共享目录</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/exports<br><span class="hljs-meta prompt_"># </span><span class="language-bash">如下</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/ddhome *(rw,<span class="hljs-built_in">sync</span>,no_subtree_check)</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">参数说明</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/ddhome 文件系统路径，</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">* 表示所有ip都可以访问该nfs</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">rw 读写权限</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">sync</span> 同步方式，也可以使用async</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">no_subtree_check 禁止检查子目录的权限</span><br></code></pre></td></tr></table></figure><ul><li>完毕后，重启nfs-server。<code>systemctl restart nfs-server</code></li></ul><h5 id="部署rbac"><a href="#部署rbac" class="headerlink" title="部署rbac"></a>部署rbac</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner</span><br>  <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner-runner</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;nodes&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>]<br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;persistentvolumes&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;delete&quot;</span>]<br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;persistentvolumeclaims&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>]<br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;storage.k8s.io&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;storageclasses&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>]<br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;events&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>, <span class="hljs-string">&quot;patch&quot;</span>]<br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">run-nfs-client-provisioner</span><br><span class="hljs-attr">subjects:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner</span><br>    <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>    <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner-runner</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Role</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">leader-locking-nfs-client-provisioner</span><br>  <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;endpoints&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>, <span class="hljs-string">&quot;patch&quot;</span>]<br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">RoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">leader-locking-nfs-client-provisioner</span><br>  <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">subjects:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner</span><br>    <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>    <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">Role</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">leader-locking-nfs-client-provisioner</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br></code></pre></td></tr></table></figure><h5 id="部署nfs-client"><a href="#部署nfs-client" class="headerlink" title="部署nfs-client"></a>部署nfs-client</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-client-provisioner</span><br>  <span class="hljs-comment"># replace with namespace where provisioner is deployed</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">strategy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">Recreate</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-client-provisioner</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-client-provisioner</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">nfs-client-provisioner</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-provisioner</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">registry.k8s.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-root</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/persistentvolumes</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">PROVISIONER_NAME</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">k8s-sigs.io/nfs-subdir-external-provisioner</span> <span class="hljs-comment"># 这里的名称需要与storageclass中的provisioner名称一致</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">NFS_SERVER</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&lt;nfs服务器地址&gt;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">NFS_PATH</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&lt;nfs存储的地址&gt;</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-client-root</span><br>          <span class="hljs-attr">nfs:</span><br>            <span class="hljs-attr">server:</span> <span class="hljs-string">&lt;nfs服务器地址&gt;</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">&lt;nfs存储的地址&gt;</span><br></code></pre></td></tr></table></figure><h5 id="部署storageClass"><a href="#部署storageClass" class="headerlink" title="部署storageClass"></a>部署storageClass</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">storage.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">StorageClass</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">config-nfs</span><br><span class="hljs-attr">provisioner:</span> <span class="hljs-string">k8s-sigs.io/nfs-subdir-external-provisioner</span> <span class="hljs-comment"># 这里的名称需要与nfs-client中的provisioner名称一致</span><br><span class="hljs-attr">reclaimPolicy:</span> <span class="hljs-string">Retain</span> <span class="hljs-comment"># 保留卷</span><br><span class="hljs-attr">parameters:</span><br>  <span class="hljs-comment"># 这里可以指定nfs中的路径</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">/ddhome/nfs/resource</span><br>  <span class="hljs-comment"># 是否归档，如果为true，则在pvc删除之前，会将内容存档到一个tar文件中</span><br>  <span class="hljs-attr">archiveOnDelete:</span> <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure><h5 id="部署pvc"><a href="#部署pvc" class="headerlink" title="部署pvc"></a>部署pvc</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">config-pvc</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">config-nfs</span> <span class="hljs-comment"># storageClass中的名称</span><br>  <span class="hljs-attr">accessModes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOnce</span> <span class="hljs-comment"># 卷可以被一个节点以读写方式挂载。 ReadWriteOnce 访问模式也允许运行在同一节点上的多个 Pod 访问卷。</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadOnlyMany</span> <span class="hljs-comment"># 卷可以被多个节点以只读方式挂载。</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteMany</span> <span class="hljs-comment"># 卷可以被多个节点以读写方式挂载。</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOncePod</span> <span class="hljs-comment"># 卷可以被单个 Pod 以读写方式挂载。 如果你想确保整个集群中只有一个 Pod 可以读取或写入该 PVC， 请使用 ReadWriteOncePod 访问模式。这只支持 CSI 卷以及需要 Kubernetes 1.22 以上版本</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">2Gi</span> <span class="hljs-comment"># 分配2Gi大小</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powerdns 安装</title>
      <link href="/2023/02/09/Linux/powerdns/"/>
      <url>/2023/02/09/Linux/powerdns/</url>
      
        <content type="html"><![CDATA[<h4 id="更新软件源，安装软件"><a href="#更新软件源，安装软件" class="headerlink" title="更新软件源，安装软件"></a>更新软件源，安装软件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装epel源</span><br>yum install -y epel-release<br><br><span class="hljs-comment"># 安装pdns</span><br>yum install -y pdns pdns-backend-mysql pdns-recursor mariadb-server mysql<br></code></pre></td></tr></table></figure><h4 id="启动数据库，导入表结构"><a href="#启动数据库，导入表结构" class="headerlink" title="启动数据库，导入表结构"></a>启动数据库，导入表结构</h4><h5 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 启动mariadb</span><br>systemctl start mariadb<br>systemctl <span class="hljs-built_in">enable</span> mariadb<br></code></pre></td></tr></table></figure><h5 id="导入数据表结构"><a href="#导入数据表结构" class="headerlink" title="导入数据表结构"></a>导入数据表结构</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">导入数据表结构</span><br>CREATE DATABASE powerdns;<br><br>GRANT ALL ON powerdns.* TO &#x27;powerdns&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;powerdns&#x27;;<br>FLUSH PRIVILEGES;<br><br>use powerdns;<br><br>CREATE TABLE domains (<br>  id                    INT AUTO_INCREMENT,<br>  name                  VARCHAR(255) NOT NULL,<br>  master                VARCHAR(128) DEFAULT NULL,<br>  last_check            INT DEFAULT NULL,<br>  type                  VARCHAR(6) NOT NULL,<br>  notified_serial       INT DEFAULT NULL,<br>  account               VARCHAR(40) DEFAULT NULL,<br>  PRIMARY KEY (id)<br>) Engine=InnoDB;<br><br>CREATE UNIQUE INDEX name_index ON domains(name);<br><br><br>CREATE TABLE records (<br>  id                    BIGINT AUTO_INCREMENT,<br>  domain_id             INT DEFAULT NULL,<br>  name                  VARCHAR(255) DEFAULT NULL,<br>  type                  VARCHAR(10) DEFAULT NULL,<br>  content               VARCHAR(64000) DEFAULT NULL,<br>  ttl                   INT DEFAULT NULL,<br>  prio                  INT DEFAULT NULL,<br>  change_date           INT DEFAULT NULL,<br>  disabled              TINYINT(1) DEFAULT 0,<br>  ordername             VARCHAR(255) BINARY DEFAULT NULL,<br>  auth                  TINYINT(1) DEFAULT 1,<br>  PRIMARY KEY (id)<br>) Engine=InnoDB;<br><br>CREATE INDEX nametype_index ON records(name,type);<br>CREATE INDEX domain_id ON records(domain_id);<br>CREATE INDEX recordorder ON records (domain_id, ordername);<br><br><br>CREATE TABLE supermasters (<br>  ip                    VARCHAR(64) NOT NULL,<br>  nameserver            VARCHAR(255) NOT NULL,<br>  account               VARCHAR(40) NOT NULL,<br>  PRIMARY KEY (ip, nameserver)<br>) Engine=InnoDB;<br><br><br>CREATE TABLE comments (<br>  id                    INT AUTO_INCREMENT,<br>  domain_id             INT NOT NULL,<br>  name                  VARCHAR(255) NOT NULL,<br>  type                  VARCHAR(10) NOT NULL,<br>  modified_at           INT NOT NULL,<br>  account               VARCHAR(40) NOT NULL,<br>  comment               VARCHAR(64000) NOT NULL,<br>  PRIMARY KEY (id)<br>) Engine=InnoDB;<br><br>CREATE INDEX comments_domain_id_idx ON comments (domain_id);<br>CREATE INDEX comments_name_type_idx ON comments (name, type);<br>CREATE INDEX comments_order_idx ON comments (domain_id, modified_at);<br><br><br>CREATE TABLE domainmetadata (<br>  id                    INT AUTO_INCREMENT,<br>  domain_id             INT NOT NULL,<br>  kind                  VARCHAR(32),<br>  content               TEXT,<br>  PRIMARY KEY (id)<br>) Engine=InnoDB;<br><br>CREATE INDEX domainmetadata_idx ON domainmetadata (domain_id, kind);<br><br><br>CREATE TABLE cryptokeys (<br>  id                    INT AUTO_INCREMENT,<br>  domain_id             INT NOT NULL,<br>  flags                 INT NOT NULL,<br>  active                BOOL,<br>  content               TEXT,<br>  PRIMARY KEY(id)<br>) Engine=InnoDB;<br><br>CREATE INDEX domainidindex ON cryptokeys(domain_id);<br><br><br>CREATE TABLE tsigkeys (<br>  id                    INT AUTO_INCREMENT,<br>  name                  VARCHAR(255),<br>  algorithm             VARCHAR(50),<br>  secret                VARCHAR(255),<br>  PRIMARY KEY (id)<br>) Engine=InnoDB;<br><br>CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm);<br></code></pre></td></tr></table></figure><h4 id="配置pdns"><a href="#配置pdns" class="headerlink" title="配置pdns"></a>配置pdns</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 配置pdns</span><br>vim /etc/pdns/pdns.conf<br><br><span class="hljs-comment"># 更新如下内容</span><br>launch=gmysql<br>gmysql-host=127.0.0.1<br>gmysql-user=powerdns<br>gmysql-password=powerdns<br>gmysql-dbname=powerdns<br>local-port=5300<br>max-tcp-connections=200<br><br><span class="hljs-comment"># 启动pdns</span><br>systemctl start pdns<br>systemctl <span class="hljs-built_in">enable</span> pdns<br><br><span class="hljs-comment"># 配置pdns-recursor</span><br>vim /etc/pdns-recursor/recursor.conf<br>...<br>allow-from=0.0.0.0/0<br>daemon=<span class="hljs-built_in">yes</span><br><span class="hljs-comment">## 指定指定域名解析地址</span><br>forward-zones-file=/etc/pdns-recursor/zone<br><span class="hljs-comment">## 向上递归dns地址，根域</span><br>forward-zones-recurse=.=114.114.114.114  <br>local-address=0.0.0.0<br>local-port=53<br><br>vim /etc/pdns-recursor/zone<br><span class="hljs-comment">## 拦截两个域名的解析</span><br>sysadmin.com=127.0.0.1:5300<br>ops.com=127.0.0.1:5300<br><br><span class="hljs-comment"># 启动pdns-recursor</span><br>systemctl start pdns-recursor<br>systemctl <span class="hljs-built_in">enable</span> pdns-recursor<br><br><span class="hljs-comment"># 安装poweradmin</span><br>yum install -y httpd php php-mcrypt php-pdo php-mysql<br><br><span class="hljs-comment"># 将php文件解压到/var/www/html下</span><br><br><span class="hljs-comment"># 启动httpd</span><br>systemctl start httpd<br>systemctl <span class="hljs-built_in">enable</span> httpd<br><br></code></pre></td></tr></table></figure><ul><li>访问 <a href="http://ip:port/install">http://ip:port/install</a> 进行相关配置</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
